name: dart-sdk

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "*" # Push events to matching v*, i.e. v1.0, v20.15.10

jobs:
  build-flutter-engine:
    runs-on: ubuntu-latest
    steps:
    - name: Maximize build space
      uses: easimon/maximize-build-space@v4
      with:
          root-reserve-mb: 512
          swap-size-mb: 1024
          remove-dotnet: 'true'
          remove-haskell: 'true'
          remove-android: 'true'
    - name: Checkout
      uses: actions/checkout@v2
    - name: Echo Free space
      run: |
          echo "Free space:"
          df -h
    - name: Set up Python 2.x
      uses: actions/setup-python@v2
      with:
        python-version: '2.x'
    - name: Prepare Env
      run: |
        sudo apt-get update
        sudo apt-get install g++-aarch64-linux-gnu g++-arm-linux-gnueabihf
        sudo apt-get install g++-multilib gcc-multilib
        sudo apt-get install zip
    - name: Get Resource
      run: |
        git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
        export PATH="$PATH:$PWD/depot_tools"
        mkdir flutter-engine
        echo 'solutions = [
        {
         "managed": False,
         "name": "src/flutter",
         "url": "https://github.com/flutter/engine",
         "custom_deps": {},
         "deps_file": "DEPS",
         "safesync_url": "",
        },
        ]' >> flutter-engine/.gclient
        cd flutter-engine
        gclient sync
        git checkout a9d88a4d182bdae23e3a4989abfb7ea25954aad1
    - name: Build Engine
      run: |
        export PATH="$PATH:$PWD/depot_tools"
        cd flutter-engine/src
        ls flutter/
        ls flutter/tools
        ./flutter/tools/gn --target-os android --linux-cpu arm64 --no-goma --runtime-mode release
        ninja -C out/android_release_arm64
        ./flutter/tools/gn --target-os android --linux-cpu arm64 --no-goma --runtime-mode debug
        ninja -C out/android_debug_arm64
        ./flutter/tools/gn --target-os linux --linux-cpu arm64 --no-goma --runtime-mode release
        ninja -C out/linux_release_arm64
        ./flutter/tools/gn --target-os linux --linux-cpu arm64 --no-goma --runtime-mode debug
        ninja -C out/linux_debug_arm64
    - name: Zip Engine
      run: |
        cd flutter-engine/src/out
        ls
        zip -q -r linux_release_arm64.zip linux_release_arm64
        zip -q -r linux_debug_arm64.zip linux_debug_arm64
        zip -q -r android_release_arm64.zip android_release_arm64
        zip -q -r android_debug_arm64.zip android_debug_arm64
    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
    - name: Test with environment variables
      run: echo $TAG_NAME - $RELEASE_TIME
      env:
          TAG_NAME: Flutter-ARM64
          RELEASE_TIME: ${{ steps.date.outputs.date }}
    - name: Release Engine
      uses: ncipollo/release-action@v1
      with:
        artifacts: "flutter-engine/src/out/*.zip"
        tag: Flutter-ARM64-${{ steps.date.outputs.date }}
        token: ${{ secrets.RELEASE_TOKEN }}
        allowUpdates: true
